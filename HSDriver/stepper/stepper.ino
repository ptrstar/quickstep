// CNC Shield V3 pin definitions
#define X_STEP 2
#define X_DIR  5
#define Y_STEP 3
#define Y_DIR  6
#define Z_STEP 4
#define Z_DIR  7
#define ENABLE_PIN 8

#define X_MICROSTEPS 8
#define Y_MICROSTEPS 8
#define Z_MICROSTEPS 8

#define LIFT_AMT 20

#define MAX_SPEED 50 // steps per second

const uint8_t IM[] PROGMEM = {
0xA8,0x01,0x01,0xff,0x03,0x00,0x73,
0xAA,0x00,0x74,0x00,0x74,0x00,0x74,0x00,0x74,
0xAA,0x00,0x74,0x01,0x02,0x03,0x01,0x67,0x00,
0xAA,0x67,0x00,0x67,0x00,0x67,0x00,0x67,0x00,
0x8A,0x04,0xff,0x00,0x01,0x00,0xfc,
0xA8,0x00,0xfe,0x00,0x8c,0x00,0x8c,
0xAA,0x00,0x8d,0x00,0x8d,0x00,0x8d,0x00,0x8d,
0xAA,0xfe,0xfd,0xfe,0xff,0x99,0x00,0x99,0x00,
0x2A,0x99,0x00,0x99,0x00,0x9a,0x00,
0xA1,0x56,0x56,
0xAA,0x57,0x57,0x57,0x57,
0xAA,0x67,0x67,0x67,0x67,
0xAA,0x67,0x67,0x67,0x67,
0xAA,0x67,0x67,0x67,0x67,
0x8A,0x67,0x67,0x01,
0x22,0x01,0x50,
0xAA,0x14,0x31,0x2f,0x20,
0xAA,0x22,0x05,0x05,0x02,
0x28,0xce,0xcf,
0x2A,0x01,0x03,0xe4,
0xA2,0xb5,0x10,0x50,
0xAA,0x50,0x2e,0x2e,0x0d,
0xAA,0xee,0xcb,0xdb,0xbb,
0xAA,0xe0,0xf2,0x06,0x07,
0xAA,0xe5,0x05,0xe2,0xb5,
0x8A,0xc5,0xc7,0x02,
0x28,0x01,0x02,
0xA2,0xe2,0x24,0x02,
0x22,0x02,0x52,
0xAA,0x24,0x4f,0x21,0x22,
0x8A,0x03,0x01,0xc6,
0xA2,0xc7,0x0e,0x42,
0xAA,0x2e,0x2e,0x0b,0xed,
0x2A,0xef,0x90,0xa0,
0xA2,0x25,0x01,0x04,
0xAA,0x04,0xe5,0x02,0xf3,
0x22,0xc4,0x02,
0xAA,0x06,0x06,0x06,0x06,
0xAA,0x47,0x43,0x32,0x20,
0xAA,0x49,0xfd,0xde,0xfd,
0xAA,0x0e,0xfd,0xde,0x0d,
0x8A,0x20,0x02,0x0a,
0x2A,0x0a,0x1a,0x1b,
0x8A,0x1f,0x1f,0x09,
0xAA,0x0a,0x0a,0x0a,0x1a,
0x8A,0x1a,0x1a,0x01,
0xAA,0x03,0x12,0x22,0x3e,
0xAA,0x2e,0x1d,0x0b,0xfe,
0x2A,0xef,0xd1,0xd4,
0x2A,0x0b,0x0b,0x0b,
0xA8,0x6d,0x6d,0x7d,
0x8A,0x7d,0x7d,0x10,
0xAA,0x30,0x2e,0x1e,0x0b,
0x2A,0xfd,0xe0,0xa7,
0x8A,0xcb,0xdb,0x3d,
0x2A,0x30,0x2f,0x1f,
0xA2,0x55,0x0e,0x0a,
0x22,0x0b,0x0e,
0xAA,0x3c,0x3f,0x20,0x5d,
0xAA,0x50,0x42,0x53,0x10,
0x88,0x5e,0x69,
0xAA,0x3f,0x40,0x5e,0x50,
0xAA,0x2e,0x79,0x7c,0x50,
0xAA,0x50,0x53,0x7c,0x3c,
0xAA,0x4c,0x7d,0x50,0x5d,
0xAA,0x40,0x50,0x52,0x53,
0xAA,0x53,0x40,0x5d,0x20,
0x2A,0x42,0x42,0x11,
0xA2,0x05,0x52,0x53,
0xAA,0x60,0x60,0x53,0x30,
0xAA,0x42,0x5d,0x5e,0x50,
0xAA,0x21,0x55,0x13,0x02,
0xAA,0xe5,0x13,0x21,0x50,
0xAA,0x42,0x53,0x30,0x53,
0xAA,0x40,0x31,0x45,0x02,
0xAA,0xf3,0x35,0x05,0x12,
0xAA,0x23,0x31,0x20,0x21,
0xAA,0x33,0x12,0x03,0x12,
0x8A,0x55,0x12,0xbd,
0xA0,0xbf,0xcf,
0xA8,0xf0,0xd1,0xe0,
0x2A,0xbd,0xfe,0x0c,
0xAA,0xfa,0xfa,0xfb,0x0b,
0x28,0xf0,0xf0,
0x8A,0x3c,0x4c,0x10,
0x22,0x20,0x40,
0xAA,0x40,0x5e,0x21,0x12,
0xA2,0x02,0x90,0x90,
0xAA,0x90,0x90,0xa1,0xa1,
0x28,0xf1,0xc2,
0x2A,0xa9,0xa9,0xba,
0xAA,0xf0,0xb0,0xc2,0xdf,
0x8A,0xfd,0x0d,0x9b,
0xA8,0x01,0x02,0xe4,
0xAA,0xe4,0xe0,0xfd,0x0a,
0x94,0xfb,0xf2,
0x28,0x00,0xfe,0x00,0xdb,
0x21,0xc9,
0xAA,0x11,0x02,0x94,0xbe,
0x8A,0xb0,0xdd,0x2b,
0xA8,0x4e,0x50,0x50,
0xAA,0x60,0x31,0x45,0x40,
0xAA,0x40,0x2f,0x50,0x4d,
0x8A,0x30,0x10,0xb7,
0x2A,0xb7,0xb7,0xc7,
0xAA,0x4d,0x4e,0x50,0x60,
0xAA,0x60,0x73,0x23,0x52,
0xAA,0x33,0x42,0x33,0x52,
0xAA,0x56,0x67,0x47,0x04,
0x8A,0x04,0x01,0xbb,
0xA8,0xff,0xef,0xd0,
0x2A,0xcd,0xc1,0xed,
0xA2,0xbd,0x0f,0xfd,
0xAA,0xbb,0xdf,0x90,0xe1,
0x22,0xc7,0x02,
0x8A,0x01,0x02,0x35,
0xA8,0x31,0x32,0x74,
0xAA,0x20,0x53,0x60,0x60,
0x8A,0x21,0x11,0x0b,
0x28,0x20,0x10,
0x2A,0x06,0x16,0x16,
0x8A,0x01,0x01,0x90,
0xA8,0x40,0x21,0x23,
0xAA,0x35,0x21,0x50,0x53,
0xAA,0x4d,0x40,0x40,0x21,
0x8A,0x03,0xf1,0x4f,
0xA2,0x5f,0x42,0x70,
0x8A,0x21,0x22,0x25,
0xA8,0xfe,0xf0,0xe3,
0xAA,0xe0,0xef,0xb0,0xb0,
0xAA,0xbd,0xb0,0xb0,0xb0,
0x88,0x25,0x04,
0xAA,0x25,0x25,0x35,0x02,
0xAA,0x35,0x05,0x06,0x06,
0xAA,0x06,0xf2,0x03,0x22,
0xAA,0x13,0x05,0x05,0xe5,
0xAA,0x06,0x06,0x13,0x22,
0xAA,0x23,0x05,0x05,0x05,
0xAA,0x12,0x22,0x50,0x50,
0xAA,0x42,0x50,0x31,0x25,
0xAA,0x22,0x50,0x5d,0x50,
0xAA,0x2f,0x3c,0x4c,0x3f,
0x22,0x10,0x2b,
0xAA,0x1f,0x5b,0x39,0x3a,
0xAA,0x0b,0x2b,0x0b,0x3b,
0xAA,0x0e,0xdb,0x0b,0x0b,
0xAA,0x0b,0xeb,0xeb,0x0d,
0xAA,0xc9,0xa9,0xaa,0xeb,
0x2A,0xde,0xeb,0xcf,
0xA2,0xc0,0xe1,0xe0,
0x8A,0xef,0xc0,0xe5,
0x28,0x01,0x01,
0x8A,0x24,0x34,0xe0,
0xAA,0x90,0xbd,0xce,0xb0,
0x4A,0xb0,0xd2,
0x89,0x03,0x00,0x08,0x00,
0xAA,0x05,0x02,0x32,0x00,0x05,0xfe,0x08,0x00,
0x12,0x01,0x00,
0xA2,0xb0,0x01,0x03,
0x2A,0xd5,0x02,0xe4,
0xA2,0xb3,0x01,0xe4,
0x88,0x02,0x14,
0xAA,0x25,0x31,0x70,0x5e,
0xAA,0x20,0x31,0x20,0x1d,
0x8A,0x42,0x10,0x50,
0x28,0x01,0x01,
0xA2,0xd5,0x10,0x0f,
0x2A,0xe0,0xc4,0xc5,
0xA2,0xd7,0xf0,0xb3,
0xAA,0xb0,0xc0,0xb2,0xa0,
0x8A,0xa0,0xd3,0xdb,
0xA8,0xf0,0xb0,0xc0,
0x2A,0xb2,0xb0,0xc0,
0xA2,0xce,0x11,0x02,
0xAA,0x94,0xa0,0xa0,0xb3,
0xAA,0xa0,0xa0,0xd1,0xed,
0xAA,0xef,0x90,0xbe,0xb0,
0xAA,0xcd,0xd0,0xad,0xad,
0xAA,0x0b,0xcc,0xdc,0xeb,
0xAA,0xde,0xef,0xb0,0x9c,
0x22,0xfc,0x0b,
0xAA,0x34,0x30,0x2f,0x30,
0xAA,0x2e,0x2e,0x2d,0x32,
0xAA,0x30,0x2e,0x2e,0x1d,
0xAA,0x0b,0xeb,0xeb,0x0e,
0x8A,0xdb,0x0f,0x0b,
0x28,0x0e,0xed,
0xA2,0xe7,0x01,0xe0,
0xAA,0xcb,0x0e,0x2d,0x1e,
0xAA,0x0b,0x3b,0x0b,0x0b,
0xAA,0xed,0xcb,0xdf,0xb0,
0xAA,0xc0,0xd1,0xc5,0xe3,
0xAA,0x02,0xe5,0x06,0x07,
0xAA,0x12,0x03,0xe0,0xd2,
0x2A,0xe0,0xc9,0x0c,
0xA2,0x0e,0x3c,0x09,
0xAA,0x09,0x0a,0x2b,0xfd,
0xAA,0x0e,0x1d,0x09,0xeb,
0xAA,0x0d,0x2b,0x3b,0xdb,
0xAA,0x49,0x7c,0x50,0x4e,
0xAA,0x30,0x2e,0x3e,0x20,
0xAA,0x22,0x30,0x2f,0x70,
0xAA,0x7c,0x3e,0x2f,0x30,
0xAA,0x2e,0x2e,0x7c,0x50,
0xAA,0x3f,0x1d,0x0e,0x1d,
0xAA,0x2e,0x30,0x12,0x03,
0xAA,0x12,0x32,0x60,0x60,
0xAA,0x70,0x42,0x50,0x53,
0xAA,0x40,0x50,0x52,0x60,
0xAA,0x60,0x5d,0x5e,0x40,
0xAA,0x50,0x53,0x70,0x52,
0xAA,0x60,0x60,0x70,0x53,
0xAA,0x70,0x70,0x2e,0x30,
0xAA,0x23,0x21,0x50,0x50,
0xAA,0x60,0x60,0x21,0x30,
0xAA,0x2f,0x70,0x5e,0x50,
0xAA,0x42,0x30,0x2f,0x3d,
0xAA,0x2f,0x20,0x3f,0x2d,
0xAA,0x20,0x32,0x70,0x70,
0xA2,0x10,0xab,0xab,
0xA8,0xf1,0xe0,0xff,
0x88,0x20,0x4c,
0x8A,0x1d,0x0f,0xb6,
0xA2,0xb7,0xf0,0xe0,
0x22,0xc2,0x73,
0xA8,0xe6,0xe6,0xf6,
0x8A,0xf7,0xf7,0xde,
0xAA,0xc0,0xc0,0xc2,0xb0,
0xAA,0xd1,0xe0,0xee,0x0f,
0x8A,0x2e,0x1f,0x63,
0xAA,0x73,0x73,0x73,0x73,
0xA2,0x73,0xf0,0x0e,
0xAA,0x20,0x55,0x13,0x07,
0xAA,0x25,0xd5,0xe5,0xe5,
0xAA,0x03,0xe5,0x02,0xd5,
0xAA,0x04,0x04,0xe5,0x05,
0xAA,0xe5,0x02,0xe3,0xa6,
0x88,0xe5,0xf0,
0xAA,0xe0,0xa3,0xa3,0xd3,
0xAA,0xb2,0xe3,0xb2,0xc3,
0xAA,0xc3,0xc4,0xc3,0x97,
0xAA,0xd2,0x90,0x90,0x90,
0x8A,0xd1,0xd4,0x41,
0xA2,0x51,0xf0,0x0f,
0xAA,0x20,0x07,0xe0,0xef,
0xAA,0xb0,0xcf,0xf2,0xe3,
0x8A,0xd1,0xd0,0xb0,
0xA2,0xb0,0x01,0x06,
0xAA,0x06,0x06,0xf2,0xb0,
0xAA,0xc5,0xd2,0xa0,0xa0,
0xAA,0xcd,0xb3,0xd0,0xc2,
0xAA,0xd0,0xe1,0xe3,0xc2,
0xAA,0xc2,0xb0,0xc0,0xd1,
0x8A,0xe2,0xd2,0xbe,
0xA2,0xbf,0xff,0xdd,
0xAA,0xfe,0x09,0x09,0x09,
0x88,0x72,0x21,
0x22,0x12,0x20,
0xAA,0x42,0x40,0x50,0x31,
0x22,0x12,0x72,
0xAA,0xf0,0xb3,0x90,0x90,
0xA2,0xa0,0x2b,0x2b,
0xA2,0x3b,0x40,0x40,
0x22,0x10,0x50,
0x8A,0x4c,0x1f,0x5d,
0xA8,0x40,0x40,0x21,
0x8A,0x23,0x01,0x05,
0xA8,0x0f,0xe0,0xc5,
0x2A,0xd1,0xc0,0xce,
0xA,0x3c,0x4c,
0x2A,0x09,0x19,0x1a,
0xAA,0x4c,0x2f,0x30,0x5e,
0xAA,0x70,0x70,0x52,0x10,
0x88,0x5b,0x30,
0xA2,0x10,0x3a,0x4a,
0x8A,0x4b,0x4b,0x6d,
0x22,0x10,0x5b,
0x2A,0x0f,0x0b,0x0c,
0xA2,0x0e,0x1e,0x1f,
0x88,0x75,0x14,
0xA2,0x11,0x04,0x04,
0x28,0xfe,0xad,
0x2A,0x25,0x25,0x35,
0xA8,0xa0,0xb1,0xb1,
0xA8,0x3e,0x50,0x50,
0xAA,0x2e,0x5b,0x0d,0x2e,
0xAA,0x3e,0x2b,0x3d,0x1e,
0x2A,0x0b,0xfd,0xef,
0xA2,0x73,0x0e,0x0b,
0xAA,0x0b,0x3b,0x0b,0xdb,
0x8A,0xeb,0x0d,0x5b,
0xA8,0xfe,0xda,0xdb,
0x88,0xb9,0x0e,
0xA2,0x0f,0xd5,0xe5,
0xA8,0x36,0xe0,0xff,
0x88,0x35,0x11,
0xAA,0x13,0xe5,0x06,0x06,
0x22,0xd4,0xeb,
0x8A,0xf0,0xae,0x45,
0x8A,0x45,0x45,0x01,
0xAA,0x05,0xe2,0xe3,0xe1,
0xAA,0xc0,0xc0,0xef,0x0d,
0xAA,0x1e,0x0d,0xeb,0x0b,
0xAA,0x0b,0x1e,0x0d,0xfe,
0xAA,0x1d,0x0e,0xfd,0x09,
0xAA,0x1c,0x2c,0x5b,0x1e,
0xAA,0xfd,0xef,0xd0,0xd1,
0xA2,0xed,0x29,0x2a,
0x8A,0x2a,0x3a,0x0e,
0x2A,0xfe,0xbb,0xdf,
0xA2,0xdb,0xf0,0xad,
0x22,0xbe,0x07,
0xAA,0xf0,0xe0,0xbd,0xbe,
0xA2,0xd0,0xb1,0xb1,
0xA2,0xb1,0x10,0x0e,
0xA2,0xdd,0xac,0xac,
0xAA,0xac,0xac,0xac,0xad,
0xA8,0xf0,0xef,0xbb,
0x8A,0xdf,0xb2,0x04,
0xA2,0x04,0xe0,0xf0,
0x28,0xbe,0xcf,
0xAA,0xef,0xec,0xfc,0x0e,
0xAA,0xfd,0xde,0xef,0xc0,
0x88,0xeb,0x0e,
0x8A,0x0a,0x0b,0xb0,
0xA8,0xff,0xce,0xce,
0x88,0xdb,0xf0,
0xA2,0xf0,0xea,0xea,
0x82,0xfb,0x95,
0xA2,0x95,0xfe,0xcd,
0xA8,0xa0,0xa0,0xb0,
0x20,0x97,
0xAA,0x10,0x3f,0x2d,0x0e,
0xAA,0xef,0xd0,0xe1,0xd4,
0x88,0x02,0x04,
0x8A,0x05,0x01,0x45,
0x28,0x10,0x20,
0x8A,0xd5,0xe5,0xf1,
0x2A,0xd2,0xee,0xfd,
0xA2,0x0d,0x3c,0x3f,
0xAA,0x21,0x23,0x22,0x05,
0xAA,0x25,0x04,0x04,0xf2,
0xAA,0xd3,0xe0,0xed,0xfe,
0x8A,0x0b,0x0f,0xc6,
0xA2,0xc6,0x0f,0x20,
0xAA,0x77,0x03,0xd1,0xe0,
0xAA,0xef,0xdd,0xbe,0xfc,
0xA8,0xd5,0xd5,0xd5,
0xA8,0xbb,0xcc,0xef,
0x8A,0xe0,0xe0,0x14,
0xA2,0x24,0x23,0x03,
0x2A,0x35,0x10,0x1f,
0xA2,0x5d,0x0f,0x0f,
0xA8,0x73,0x73,0x74,
0x28,0x10,0x20,
0x8A,0x1c,0x1c,0x30,
0x2A,0x5e,0x31,0x11,
0xA2,0x0b,0x63,0x10,
0xA8,0xe6,0xe7,0xf7,
0xA8,0xf1,0xe2,0xd2,
0x8A,0x90,0xa2,0xd5,
0xA2,0xe5,0x01,0xe4,
0x28,0x90,0x90,
0xAA,0xff,0xdf,0xe0,0xad,
0x88,0xb0,0xf1,
0x2A,0x03,0x22,0x12,
0xAA,0x52,0x62,0x62,0x63,
0xA2,0x63,0x41,0x45,
0xA2,0x22,0xc2,0xc3,
0x28,0x0e,0xed,
0xAA,0x15,0x25,0x26,0x26,
0xA8,0x6a,0x2f,0x30,
0xAA,0x21,0x12,0x05,0xf3,
0x2A,0xe2,0xd5,0xf2,
0xA2,0x92,0x0f,0x0a,
0xA2,0x0b,0x05,0x06,
0xA2,0x06,0x0f,0x10,
0x2A,0x02,0xc4,0xc5,
0xA2,0xe0,0xe1,0x03,
0xAA,0x31,0x20,0x41,0x1e,
0xAA,0x2d,0x3f,0x40,0x50,
0x22,0x10,0xc5,
0xAA,0xe1,0x03,0x43,0x44,
0xAA,0x13,0xf2,0xd0,0xee,
0x8A,0xbd,0xdd,0xb2,
0xA8,0x34,0x22,0x03,
0x8A,0xe2,0xf2,0xeb,
0xA8,0xf1,0xe0,0xec,
0x88,0x0e,0xf1,
0xAA,0xd0,0xef,0xe0,0xd1,
0x2A,0x02,0x33,0x11,
0xA2,0x73,0x03,0x02,
0x88,0xb2,0xf0,
0xAA,0xbe,0xe0,0xc1,0xeb,
0xAA,0x1d,0x0e,0xfd,0x0e,
0xAA,0x2b,0xfd,0xbb,0xef,
0x8A,0xb0,0xd3,0x45,
0xA,0x56,0x56,
0x8A,0xa4,0xa4,0x01,
0xAA,0xcf,0xe0,0xbd,0xa0,
0xAA,0xa0,0xef,0xc0,0xfd,
0xA2,0xdd,0x19,0x29,
0x8A,0x29,0x29,0xc4,
0xAA,0xe0,0xef,0xb0,0xde,
0xAA,0xee,0xfd,0x0b,0x1d,
0xA2,0xf0,0xa1,0xa2,
0x8A,0xa2,0xa2,0x01,
0xAA,0x04,0x04,0xf2,0xb4,
0x22,0xc5,0x03,
0xAA,0x04,0x04,0x23,0x22,
0x8A,0x13,0x01,0xb0,
0x28,0xf1,0xd4,
0xA2,0x03,0x03,0x13,
0xAA,0x55,0x74,0x20,0x10,
0x28,0xec,0xec,
0x8A,0xef,0xdc,0x0b,
0xA8,0x30,0x31,0x34,
0xAA,0x44,0x52,0x13,0x07,
0xAA,0xf3,0xd2,0xc3,0xd2,
0xAA,0x03,0x31,0x70,0x70,
0xA2,0x10,0xa2,0xa3,
0xA8,0x14,0x32,0x22,
0xAA,0x50,0x21,0x12,0x05,
0xAA,0x23,0x45,0x55,0x55,
0x2A,0x52,0x20,0x1f,
0xA2,0xbb,0x4e,0x21,
0xAA,0x32,0x53,0x22,0x53,
0xAA,0x22,0x13,0x02,0x13,
0xAA,0x43,0x44,0x74,0x60,
0xAA,0x60,0x21,0x55,0x55,
0xAA,0x43,0x40,0x12,0x22,
0xAA,0x50,0x60,0x60,0x5d,
0xAA,0x5e,0x40,0x5d,0x50,
0xAA,0x50,0x2f,0x5b,0x2b,
0xAA,0x3d,0x1e,0x0d,0x1e,
0xAA,0x2f,0x31,0x22,0x32,
0xAA,0x2e,0x5b,0x2f,0x50,
0xAA,0x50,0x4e,0x30,0x21,
0xAA,0x66,0x66,0x22,0x30,
0xAA,0x5d,0x20,0x2f,0x5b,
0xAA,0x7c,0x53,0x20,0x52,
0xAA,0x70,0x6d,0x6d,0x69,
0xAA,0x6a,0x2f,0x30,0x2f,
0xAA,0x3d,0x7d,0x20,0x5d,
0x22,0x10,0x29,
0xAA,0x40,0x5d,0x20,0x7c,
0xAA,0x7d,0x30,0x2e,0x5b,
0xAA,0x1e,0x0d,0x3b,0x0f,
0x88,0xbe,0xf0,
0xAA,0xd0,0xe1,0xb0,0xe1,
0x2A,0xa0,0xb0,0xb0,
0xAA,0x61,0x62,0x62,0x72,
0xAA,0x72,0x72,0x72,0x72,
0xA8,0x14,0x55,0x21,
0xAA,0x20,0x53,0x50,0x52,
0xAA,0x70,0x2f,0x20,0x01,
0x22,0xf0,0x39,
0xAA,0xe0,0xa0,0xb0,0xb0,
0xAA,0xde,0xc0,0xde,0xac,
0xA8,0x26,0x26,0x36,
0xA2,0x37,0x11,0x12,
0x88,0x92,0x44,
0xA2,0x11,0x9f,0x9f,
0xAA,0x9f,0x9f,0x9f,0x9f,
0xAA,0x9f,0x9f,0x9f,0x9f,
0xAA,0x90,0x90,0x90,0x90,
0x2A,0x90,0xa0,0xa0,
0xAA,0xf1,0xb5,0xe2,0xc0,
0xA8,0xda,0xda,0xda,
0xA0,0x4d,0x5e,
0xA8,0x4f,0x1d,0x0b,
0xA2,0x0f,0xb9,0xb9,
0x8A,0xb9,0xca,0x0e,
0x2A,0x1e,0x0d,0xaa,
0xA2,0x3b,0x66,0x22,
0xA2,0x10,0x19,0x2a,
0x28,0xef,0xff,
0xA2,0x0d,0x1f,0x0d,
0xA2,0xff,0xdb,0xeb,
0xA8,0x0f,0x0b,0x2d,
0xAA,0x2e,0x2b,0x5b,0x1d,
0xAA,0x0b,0xfe,0xed,0xdb,
0xAA,0xee,0xfd,0x0b,0x0b,
0x2A,0xfe,0xdf,0xd0,
0xA,0x15,0x15,
0x8A,0x5c,0x5c,0x11,
0x22,0x1f,0x0e,
0x8A,0x2c,0x0f,0xf6,
0xA2,0xf6,0x04,0x01,
0x88,0x7e,0x05,
0x8A,0x06,0x01,0xf6,
0x8A,0xf6,0x06,0x04,
0xAA,0x04,0xe3,0x02,0x20,
0xA2,0x0f,0x04,0x04,
0xA8,0x0e,0xe0,0xe3,
0xAA,0xe1,0xb0,0xcf,0xf2,
0xAA,0xe2,0xde,0xfe,0x09,
0xAA,0x0a,0x2b,0x3b,0x09,
0xAA,0xdb,0xeb,0x0b,0x0b,
0xAA,0xeb,0x0d,0x1e,0x0d,
0xAA,0xef,0xd0,0xef,0xe0,
0x22,0xe1,0x3b,
0x8A,0x0f,0x0c,0x06,
0x8A,0x06,0x06,0x10,
0xA2,0x10,0xb1,0xc1,
0xA0,0xae,0xae,
0x2A,0xaf,0xaf,0xbf,
0xAA,0x2c,0x0c,0x0c,0x3b,
0x2A,0x09,0xfd,0xef,
0x2A,0xe5,0xf5,0xf5,
0x8A,0x01,0x02,0xb1,
0x82,0xb1,0x90,
0xA8,0x06,0x25,0x03,
0xA2,0x01,0xf5,0xf5,
0xA8,0x63,0x20,0x5d,
0xAA,0x70,0x6d,0x6d,0x3c,
0xAA,0x4c,0x5e,0x2d,0x3f,
0xAA,0x21,0x03,0xb5,0xb5,
0xAA,0xc5,0xa3,0xa3,0xe0,
0xAA,0xb3,0xb0,0xb0,0xe1,
0xAA,0xe2,0xe3,0x05,0x22,
0x2A,0x03,0xd2,0xf2,
0xA2,0x5d,0x33,0x50,
0xAA,0x50,0x52,0x20,0x53,
0xAA,0x20,0x73,0x55,0x20,
0xAA,0x44,0x44,0x37,0x05,
0xAA,0x05,0x13,0x02,0xe3,
0xAA,0xf2,0x04,0x04,0xd5,
0xAA,0x02,0xf3,0xe2,0xd2,
0xAA,0xee,0x0e,0x1d,0xa0,
0xAA,0xb3,0xe2,0xe2,0xd0,
0x2A,0xee,0xbb,0xff,
0xA2,0xb5,0x11,0x03,
0x8A,0xe2,0xc2,0x35,
0xA8,0xfe,0xbb,0xef,
0x22,0xc0,0xeb,
0xAA,0xef,0xed,0xfe,0x0d,
0xAA,0xdb,0xeb,0x0a,0x0a,
0x22,0xea,0x0d,
0x8A,0x6c,0x1f,0x2b,
0x20,0x3b,
0xAA,0x3c,0x3f,0x40,0x10,
0x88,0x50,0x60,
0xAA,0x53,0x20,0x73,0x55,
0xAA,0x53,0x55,0x12,0x06,
0xAA,0x06,0x06,0xe5,0x05,
0x8A,0xe2,0xf2,0x9b,
0x8A,0x9b,0x9b,0xf0,
0xAA,0x1c,0x0d,0xdb,0x09,
0xA2,0xec,0xcb,0xdb,
0xA8,0xf1,0xe3,0x05,
0x22,0xe4,0x02,
0xAA,0x04,0x25,0x05,0x05,
0xAA,0x05,0x35,0x02,0x02,
0x88,0xd5,0xf0,
0xAA,0xee,0xee,0xec,0xec,
0xAA,0x0e,0xeb,0x09,0x09,
0x88,0x0e,0x2c,
0xAA,0x0b,0x1d,0x3e,0x0f,
0x52,0xe0,
0xA2,0xfd,0xf4,0xff,0x02,0xf8,0x03,
0x2A,0xe7,0x00,0xec,0xf7,0xf8,0x00,
0xA2,0x07,0xfb,0xff,0x00,0xfb,0xfe,
0x12,0xde,0x00,
0xA2,0x0e,0x2a,0x3a,
0xAA,0x5e,0x3d,0x20,0x22,
0x8A,0x30,0x10,0x90,
0x28,0xf1,0xe1,
0x8A,0x24,0x34,0x6c,
0xAA,0x5b,0x0d,0xfe,0x0b,
0x22,0x0f,0x92,
0x8A,0xef,0xff,0xf9,
0xA2,0xfa,0x0f,0xfd,
0x22,0xcd,0x0d,
0xAA,0x2c,0xfe,0xed,0x0f,
0xA2,0x10,0x56,0x57,
0x28,0x01,0x01,
0x2A,0x4b,0x5b,0x5b,
0xAA,0x0f,0x1c,0x2c,0x30,
0xAA,0x22,0x70,0x3e,0x0e,
0xAA,0xdd,0xef,0xe0,0xbe,
0xAA,0xd0,0x93,0xf3,0x02,
0xA2,0xef,0x72,0x72,
0x2A,0x73,0x73,0x73,
0x28,0x40,0x40,
0x8A,0x01,0x01,0x39,
0xAA,0x49,0x49,0x49,0x49,
0x28,0x1f,0x1f,
0xA2,0x25,0x2e,0x1f,
0x88,0x7b,0x0f,
0x22,0x0c,0xeb,
0x8A,0xe0,0xa0,0xb6,
0xAA,0xb6,0xb6,0xb7,0xb7,
0xAA,0xb7,0xb7,0xb7,0xb7,
0xAA,0xb7,0xc7,0xc7,0xc7,
0xA8,0x40,0x50,0x52,
0xAA,0x20,0x63,0x63,0x23,
0xAA,0x47,0xf3,0xd0,0xbb,
0xAA,0xcb,0x9c,0xb0,0xdf,
0xAA,0xe0,0xf2,0x03,0x01,
0x88,0x90,0x01,
0xA2,0x02,0xa0,0xa0,
0x28,0xf1,0xe1,
0xA2,0x03,0x06,0x06,
0xAA,0x07,0x07,0x47,0x03,
0x8A,0xf0,0x0f,0x3b,
0xA2,0x4b,0x2c,0x09,
0xAA,0x09,0x0a,0x2d,0x4b,
0xAA,0x30,0x13,0x05,0x05,
0xAA,0xd5,0x05,0x05,0xf2,
0xAA,0xe3,0x02,0x14,0x24,
0xAA,0x02,0x24,0x24,0x11,
0xA8,0xc6,0xc7,0xc7,
0xAA,0xc7,0xc7,0xc7,0xc7,
0xA8,0x01,0xe2,0xe3,
0x2A,0xd7,0x03,0xd4,
0xA2,0x02,0x06,0x06,
0xAA,0x06,0x06,0x47,0x20,
0xAA,0x2f,0x31,0x23,0x11,
0x28,0xb0,0xc0,
0x28,0xbb,0xbb,
0xAA,0xff,0xef,0x90,0xa0,
0x28,0x0b,0x0b,
0x2A,0x30,0x31,0x11,
0xAA,0xae,0xae,0xbe,0xbf,
0xA0,0xcb,0xdb,
0x28,0x0e,0x0f,
0x2A,0x5f,0x5f,0x50,
0xAA,0x1e,0x1e,0x0d,0xeb,
0xA2,0x0a,0xcb,0xdb,
0xA2,0xdb,0xff,0xdf,
0xA2,0xd2,0xa5,0xa5,
0xA2,0xb5,0xd4,0xd0,
0x8A,0x0f,0x10,0xc9,
0xAA,0xc9,0xc9,0xc9,0xd9,
0xA8,0x21,0x22,0x03,
0xAA,0xf2,0xcf,0xe0,0xbe,
0x22,0xa0,0xeb,
0xAA,0x3d,0x30,0x21,0x12,
0xA8,0x60,0x70,0x70,
0xAA,0x70,0x70,0x70,0x70,
0x2A,0x70,0x71,0x71,
0xAA,0x20,0x2f,0x1d,0x0a,
0xAA,0x0a,0x0b,0xfd,0xef,
0xA2,0xc3,0x69,0x7a,
0xAA,0x7a,0x7a,0x7a,0x7a,
0x2A,0x7a,0x7a,0x7a,
0xA8,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9d,0x9d,
0x2A,0xad,0xad,0xad,
0x8A,0x0e,0x0f,0xa9,
0x2A,0xa9,0xa9,0xaa,
0x2A,0x20,0xec,0x0c,
0xAA,0xaf,0xaf,0xa0,0xb0,
0xA0,0xc5,0xd5,
0xA2,0xd5,0x26,0x01,
0xA8,0x9f,0x9f,0x90,
0xA8,0x11,0x31,0x20,
0xAA,0x2f,0x2d,0xee,0xed,
0x8A,0xe0,0xc4,0x16,
0xAA,0x16,0x16,0x16,0x16,
0x8A,0x16,0x17,0x63,
0xAA,0x23,0x22,0x03,0xe2,
0xAA,0xe2,0xee,0xde,0xef,
0xAA,0xe1,0xc0,0xc0,0xed,
0x2A,0xe0,0x02,0x10,
0xAA,0xd6,0xd6,0xd6,0xd6,
0xAA,0xd7,0xd7,0xd7,0xe7,
0xAA,0xe7,0xe7,0xe7,0xe7,
0xAA,0xe7,0xe7,0xe7,0xe7,
0xA2,0xe7,0x06,0x01,
0x88,0x05,0x0f,
0xA2,0xc1,0xeb,0xeb,
0x82,0xfb,0x65,
0xAA,0x65,0x65,0x66,0x76,
0x2A,0x76,0x76,0x76,
0xAA,0x0f,0x10,0x32,0x22,
0xAA,0x5d,0x5e,0x20,0xf3,
0xAA,0x05,0xf3,0xb5,0xb5,
0x8A,0xe0,0xcc,0x95,
0xA8,0x11,0x53,0x12,
0x8A,0x05,0xe4,0x03,
0xA8,0x04,0x04,0x02,
0x28,0xbe,0xbf,
0x8A,0xff,0xda,0x2b,
0x28,0x62,0x10,
0xAA,0x9f,0x9f,0x90,0x90,
0xA0,0x75,0x75,
0xAA,0x75,0x75,0x76,0x76,
0x28,0x01,0x02,
0x8A,0x59,0x5a,0x60,
0x8A,0x21,0x12,0xe7,
0xA8,0x43,0x20,0x21,
0x2A,0x32,0x13,0x01,
0xA2,0x90,0x10,0xfe,
0xA8,0x26,0x27,0x37,
0x28,0x42,0x10,
0xA2,0x75,0x33,0x30,
0xA2,0x10,0x0a,0x0a,
0xA2,0x0a,0x11,0x30,
0xAA,0x2f,0x21,0x33,0x12,
0xAA,0x3f,0x30,0x21,0x30,
0xAA,0x2f,0x20,0x31,0x13,
0x22,0x01,0x09,
0xAA,0x6c,0x2d,0x49,0x0d,
0xAA,0x1e,0x20,0x32,0x22,
0xA2,0x10,0x9f,0x9f,
0x2A,0x9f,0xaf,0xaf,
0x8A,0xf0,0xa0,0x05,
0xA2,0x05,0xf1,0xf0,
0xAA,0x2b,0xfd,0xdf,0xe0,
0xAA,0xef,0xdd,0xef,0xc0,
0x88,0xe0,0xd4,
0xAA,0x22,0x22,0x20,0x20,
0xA8,0x0b,0x0b,0x0b,
0xA8,0xe1,0xf0,0xfd,
0x8A,0xef,0xc0,0xbb,
0xA8,0x4e,0x20,0x3e,
0xAA,0x0e,0xdd,0xef,0xf0,
0x88,0xd0,0xe1,
0x2A,0xfe,0xbb,0xff,
0xA2,0xb0,0x03,0x02,
0x28,0x0c,0x0c,
0xAA,0x4c,0x0e,0xdb,0xed,
0xAA,0xdf,0xe0,0xef,0xff,
0xA8,0x54,0x54,0x64,
0x28,0x40,0x10,
0xA2,0x53,0xd6,0x01,
0x28,0x65,0x65,
0xAA,0x41,0x23,0x30,0x2b,
0x8A,0x2b,0x2f,0x6f,
0xAA,0x6f,0x7f,0x7f,0x7f,
0x2A,0x70,0x70,0x70,
0xAA,0xf1,0x02,0x22,0x30,
0xAA,0x2e,0x3e,0x0f,0xb0,
0xA2,0xf0,0x69,0x69,
0xAA,0x69,0x69,0x69,0x69,
0x2A,0x79,0x79,0x79,
0x8A,0x0f,0x0f,0x6e,
0xAA,0x7e,0x7e,0x7e,0x7e,
0xAA,0x7e,0x7e,0x7e,0x7e,
0xA8,0x01,0x03,0x12,
0xAA,0x20,0x3e,0x39,0x3a,
0xAA,0x0e,0x2b,0x0b,0xeb,
0xAA,0x0d,0xdb,0x0e,0xfd,
0xAA,0xee,0xd0,0xf2,0x04,
0xAA,0x04,0x25,0x06,0x06,
0x2A,0xe5,0x03,0xe4,
0xA,0x25,0x25,
0xAA,0x6d,0x6d,0x6d,0x6d,
0x2A,0x6e,0x6e,0x7e,
0x8A,0x2f,0x1f,0x70,
0xAA,0x70,0x70,0x70,0x70,
0xAA,0x70,0x70,0x70,0x70,
0xAA,0x70,0x71,0x71,0x71,
0xAA,0x71,0x71,0x71,0x71,
0x2A,0x71,0x71,0x71,
0xAA,0x0e,0x10,0x03,0xf2,
0xAA,0x04,0x04,0xe5,0x05,
0xAA,0x05,0x05,0x12,0x22,
0xAA,0x3e,0x1e,0x0d,0x2b,
0xAA,0x0a,0x0a,0x3b,0x0d,
0xAA,0xfe,0xdf,0x1c,0x0c,
0xA8,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0xAA,0x9c,0x9c,0x9c,0x9c,
0x2A,0xad,0xad,0xad,
0xAA,0xf0,0xd0,0xb2,0xd0,
0xA8,0x9d,0x9d,0x9d,
0xAA,0x9d,0x9d,0x9d,0x9d,
0xAA,0x9d,0x9d,0x9d,0x9d,
0xAA,0x9d,0x9d,0x9d,0x9d,
0xAA,0x9d,0x9d,0x9d,0x9d,
0xAA,0x9d,0x9d,0x9d,0x9d,
0xAA,0x9d,0x9d,0x9d,0x9d,
0xAA,0x9d,0x9d,0x9d,0x9d,
0xE,0x9e,

};
// const uint8_t IM[] PROGMEM = {
// // 0xe1, 0x2F // size4: Y X
// // 0xe5, 0xfe, 0x7f // size8: X Y
// 0xe9, 0xFF,0xFF, 0x02,0x00 // size16: X Y what the heck. check little endianness!!! -1, 2


// };

uint16_t IP = 0;
uint8_t printhead_down = 0;
uint8_t instr_buffer = 0;
uint8_t instr_buffer_index = 0;
uint8_t data_size = 0x08; // amt of bits used per data point, 0: 4 bit signed ints, 1: (default) 8 bit signed ints, 2: 16 bit signed ints

void setup() {
  pinMode(X_STEP, OUTPUT); 
  pinMode(X_DIR, OUTPUT);  
  pinMode(Y_STEP, OUTPUT); 
  pinMode(Y_DIR, OUTPUT);  
  pinMode(Z_STEP, OUTPUT); 
  pinMode(Z_DIR, OUTPUT);  

  pinMode(ENABLE_PIN, OUTPUT);

  digitalWrite(X_DIR, LOW);
  digitalWrite(Y_DIR, LOW);
  digitalWrite(Z_DIR, LOW);

  digitalWrite(X_STEP, LOW);
  digitalWrite(Y_STEP, LOW);
  digitalWrite(Z_STEP, LOW);

  digitalWrite(ENABLE_PIN, LOW);

  // Serial.begin(9600);
  while (!Serial);
  delay(1500);
  // Serial.println("START");
}

uint8_t fetch_instr() {
  // load new instruction
  if (instr_buffer_index == 0) {
    instr_buffer = pgm_read_byte(&IM[IP]);
    IP++;
    instr_buffer_index = 4; 
  }
  uint8_t mask = 0x03;
  uint8_t instr = mask & instr_buffer;
  instr_buffer = instr_buffer >> 2;
  instr_buffer_index--;

  return instr;
}

void loop() {

  // line is obsolete (and incorrect since dynamic intsize changes) as "0b11" ends the program
  // if (IP >= instrCount) return;

  uint8_t instr = fetch_instr();

  switch(instr) {
    case 0x00:
      i_toggle_printhead();
      break;
    case 0x01:
      i_set_datasize();
      break;
    case 0x02:
      i_move();
      break;
    case 0x03:
      i_exit();
      break;
  }
}
void drive(int pin) {
  digitalWrite(pin, HIGH);
  delayMicroseconds(2);
  digitalWrite(pin, LOW);
}

void i_toggle_printhead() {
  if (printhead_down) {
    digitalWrite(Z_DIR, LOW);
  } else {
    digitalWrite(Z_DIR, HIGH);
  }
  printhead_down = !printhead_down;
  for (uint8_t i = 0; i < LIFT_AMT * Z_MICROSTEPS; i++) {
    drive(Z_STEP);
    delay(3);
    // delay(max(2, 1000/MAX_SPEED));
  }
}

void i_set_datasize() {
  // set data_size to 0x04, 0x08 or 0x10 respectively
  data_size = 0x04 << fetch_instr();
}

void i_move() {
  
  uint32_t yx;

  switch (data_size) {
    case 0x04:
      yx = pgm_read_byte(&IM[IP]);
      IP++;
      break;
    case 0x08:
      yx = pgm_read_word(&IM[IP]);
      IP += 2;
      break;
    case 0x10:
      yx = pgm_read_dword(&IM[IP]);
      IP += 4;
      break;
  }

  // read data_size many bits for both x and y
  int32_t readY = (yx >> data_size);
  int32_t readX = (yx & (((uint32_t)1 << data_size)-1));

  // extend negative numbers eg. for data size = 4
  // readY = ...00001000 as msb is 1 we need to extend to
  // readY = ...11111000 to retain the same value
  if (readY & ((uint32_t)1 << (data_size-1))) {
    readY = readY | ~(((uint32_t)1 << data_size)-1);
  }
  if (readX & ((uint32_t)1 << (data_size-1))) {
    readX = readX | ~(((uint32_t)1 << data_size)-1);
  }

  // set direction
  digitalWrite(X_DIR, (readX < 0) ? LOW : HIGH);
  digitalWrite(Y_DIR, (readY < 0) ? LOW : HIGH);

  // driver
  uint32_t tarX = abs(readX);
  uint32_t tarY = abs(readY);
  uint64_t posX = 0;
  uint64_t posY = 0;
  uint64_t current_time;

  uint32_t dist = sqrt(sq(tarX) + sq(tarY));
  uint64_t duration = 1000000 * dist / MAX_SPEED; // in millis

  uint32_t start_time = micros();
  uint32_t wait;

  uint64_t mtX = tarX * X_MICROSTEPS;
  uint64_t mtY = tarY * Y_MICROSTEPS;

  while (posX != mtX || posY != mtY) {
    current_time = micros() - start_time;
    wait = 0;

    uint64_t stepX = mtX * current_time / duration;
    uint64_t stepY = mtY * current_time / duration;

    if (stepX > posX) {
      drive(X_STEP);
      posX++;
      wait = 1;
    }
    if (stepY > posY) {
      drive(Y_STEP);
      posY++;
      wait = 1;
    }

    if (wait) {delayMicroseconds(500);}
  }
}
void i_exit() {
  // Serial.println("i_exit()");
  digitalWrite(ENABLE_PIN, HIGH);
  while(true);
}